import streamlit as st
import re
import string
import numpy as np
import pandas as pd
from sklearn.feature_extraction.text import CountVectorizer, TfidfVectorizer
import nltk
from nltk.corpus import stopwords
from nltk.stem import WordNetLemmatizer
from sklearn.metrics.pairwise import cosine_similarity

# --- Tema da Doceria ---
st.markdown("""
    <style>
        body, .stApp {
            background: linear-gradient(135deg, #ff69b4 0%, #fff0f5 50%, #ffefd5 100%);
        }
        
        /* For√ßa texto preto em todos os elementos */
        .stApp, .main .block-container, p, div, span, label, h1, h2, h3, h4, h5, h6 {
            color: #000000 !important;
        }
        
        /* Input e widgets com texto preto */
        .stTextInput input, .stSelectbox select, .stTextArea textarea {
            color: #000000 !important;
            background-color: #ffffff !important;
        }
        
        /* Sidebar com texto branco */
        .css-1d391kg, .css-1d391kg p, .css-1d391kg div, .sidebar .sidebar-content,
        .css-1d391kg *, section[data-testid="stSidebar"] *, 
        .css-ng1t4o *, .css-18e3th9 *, .css-1lcbmhc * {
            color: #ffffff !important;
        }
        
        .doceria-title {
            font-size: 4em;
            color: #8b4513 !important;
            font-weight: bold;
            text-align: center;
            margin-bottom: 0.2em;
            letter-spacing: 0.05em;
            text-shadow: 2px 2px 4px rgba(255,192,203,0.5);
        }
        .subtitle {
            font-size: 1.5em;
            color: #d2691e !important;
            text-align: center;
            margin-bottom: 1em;
            font-style: italic;
        }
        .chat-container {
            background-color: rgba(255,255,255,0.9);
            padding: 20px;
            border-radius: 15px;
            border: 3px solid #ffc0cb;
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }
        .chat-container * {
            color: #000000 !important;
        }
    </style>
    <div class="doceria-title">üç∞ Doce Encanto üßÅ</div>
    <div class="subtitle">Sua doceria favorita - Chatbot de atendimento</div>
""", unsafe_allow_html=True)
# --- Fim do bloco visual ---

# Dataset de intents para a doceria
intents = {
    "greeting": {
        "examples": [
            "oi",
            "ol√°",
            "bom dia",
            "boa tarde",
            "boa noite",
            "e a√≠",
            "fala",
            "hey",
            "hello",
            "oi doceria",
            "al√¥"
        ],
        "responses": [
            "üç∞ Ol√°! Bem-vindo √† Doce Encanto! Em que posso ajudar voc√™ hoje?",
            "üßÅ Oi! Que alegria ter voc√™ aqui! Como posso ado√ßar seu dia?",
            "üç≠ Seja bem-vindo √† nossa doceria! O que posso fazer por voc√™?"
        ]
    },
    "goodbye": {
        "examples": [
            "tchau",
            "at√© mais",
            "at√© logo",
            "falou",
            "adeus",
            "obrigado tchau",
            "at√© breve"
        ],
        "responses": [
            "üçØ At√© mais! Volte sempre para mais do√ßura!",
            "üßÅ Tchau! Obrigado pela visita √† Doce Encanto!",
            "üç∞ At√© logo! Esperamos voc√™ em breve com novos sabores!"
        ]
    },
    "thanks": {
        "examples": [
            "obrigado",
            "muito obrigado",
            "vlw",
            "agradecido",
            "valeu",
            "obrigada"
        ],
        "responses": [
            "üç≠ Por nada! Foi um prazer atend√™-lo!",
            "üßÅ Disponha sempre! Estamos aqui para ado√ßar seu dia!",
            "üç∞ De nada! Volte sempre que quiser algo doce!"
        ]
    },
    "menu": {
        "examples": [
            "qual o card√°pio?",
            "que doces voc√™s tem?",
            "o que voc√™s vendem?",
            "quais os produtos?",
            "menu",
            "card√°pio",
            "doces dispon√≠veis",
            "que sabores tem?"
        ],
        "responses": [
            "üç∞ Temos bolos, tortas, brigadeiros, beijinhos, cupcakes, cookies, brownies e muito mais! Qual tipo de doce voc√™ procura?",
            "üßÅ Nossa especialidade s√£o bolos personalizados, mas tamb√©m temos docinhos para festa, sobremesas geladas e doces artesanais!",
            "üç≠ Oferecemos: bolos (chocolate, morango, coco), brigadeiros gourmet, tortas doces, mousses e doces para festas!"
        ]
    },
    "hours": {
        "examples": [
            "que horas voc√™s abrem?",
            "qual o hor√°rio de funcionamento?",
            "voc√™s abrem hoje?",
            "hor√°rio",
            "que horas fecha?",
            "funcionamento"
        ],
        "responses": [
            "üïò Abrimos de segunda a s√°bado das 8h √†s 19h, e domingo das 9h √†s 17h!",
            "üïí Funcionamos seg-s√°b: 8h-19h e domingo: 9h-17h. Venha nos visitar!",
            "‚è∞ Estamos abertos de segunda a s√°bado das 8h √†s 19h, domingo das 9h √†s 17h!"
        ]
    },
    "payment": {
        "examples": [
            "quais formas de pagamento?",
            "aceitam cart√£o?",
            "posso pagar no cart√£o?",
            "pix dispon√≠vel?",
            "como pagar?",
            "aceita dinheiro?"
        ],
        "responses": [
            "üí≥ Aceitamos cart√£o (d√©bito/cr√©dito), PIX, dinheiro e at√© vale-refei√ß√£o!",
            "üí∞ Voc√™ pode pagar com cart√£o, PIX, dinheiro ou vale-alimenta√ß√£o!",
            "üè™ Formas de pagamento: cart√£o, PIX, dinheiro e cart√µes de benef√≠cio!"
        ]
    },
    "delivery": {
        "examples": [
            "fazem entrega?",
            "delivery dispon√≠vel?",
            "entregam em casa?",
            "posso pedir pelo whatsapp?",
            "como fazer pedido?"
        ],
        "responses": [
            "üöö Sim! Fazemos delivery na regi√£o central. Taxa de entrega R$ 5,00. Pedidos pelo WhatsApp: (11) 99999-9999",
            "üõµ Entregamos sim! √Årea de cobertura at√© 5km da loja. Entre em contato: (11) 99999-9999",
            "üì± Delivery dispon√≠vel! Ligue (11) 99999-9999 ou pe√ßa pelo WhatsApp. Taxa: R$ 5,00"
        ]
    },
    "prices": {
        "examples": [
            "quanto custa?",
            "qual o pre√ßo?",
            "valores",
            "pre√ßo do bolo",
            "quanto √©?",
            "tabela de pre√ßos"
        ],
        "responses": [
            "üí∞ Bolos personalizados a partir de R$ 45,00. Docinhos R$ 2,50 cada. Quer saber de algo espec√≠fico?",
            "üè∑Ô∏è Temos op√ß√µes para todos os bolsos! Bolos simples R$ 25,00, gourmet R$ 45,00+. O que voc√™ procura?",
            "üíµ Brigadeiros R$ 2,50, cupcakes R$ 8,00, tortas individuais R$ 12,00. Precisa de algo espec√≠fico?"
        ]
    },
    "orders": {
        "examples": [
            "quero fazer um pedido",
            "como encomendar?",
            "posso encomendar um bolo?",
            "fazer encomenda",
            "pedido personalizado"
        ],
        "responses": [
            "üìã Que √≥timo! Para pedidos personalizados, preciso saber: sabor, tamanho, data e tema. Me conte mais!",
            "üéÇ Adoramos fazer bolos especiais! Qual ocasi√£o? Quantas pessoas? Tem prefer√™ncia de sabor?",
            "üìû Para encomendas, ligue (11) 99999-9999 ou venha √† loja! Precisamos de 48h de anteced√™ncia."
        ]
    },
    "location": {
        "examples": [
            "onde voc√™s ficam?",
            "endere√ßo da loja",
            "como chegar?",
            "localiza√ß√£o",
            "onde √© a doceria?"
        ],
        "responses": [
            "üìç Estamos na Rua das Flores, 123 - Centro. Pr√≥ximo ao shopping! Tem estacionamento na rua.",
            "üó∫Ô∏è Endere√ßo: Rua das Flores, 123 - Centro. Entre a padaria e a farm√°cia, f√°cil de achar!",
            "üìå Ficamos na Rua das Flores, 123. Ponto de refer√™ncia: em frente √† pra√ßa central!"
        ]
    },
    "fallback": {
        "examples": [
            "..."],
        "responses": [
            "ü§î Desculpe, n√£o entendi bem. Voc√™ quer saber sobre nossos doces, hor√°rios, pre√ßos ou fazer um pedido?",
            "üòÖ N√£o compreendi. Posso ajudar com: card√°pio, pre√ßos, hor√°rios, entregas ou encomendas. O que voc√™ precisa?"
        ]
    }
}

# transformar em dataframe simples (utterance, intent)
import pandas as pd
rows = []
for intent, v in intents.items():
    for ex in v["examples"]:
        rows.append({"text": ex, "intent": intent})

df = pd.DataFrame(rows)

# downloads (apenas na primeira execu√ß√£o)
nltk.download('punkt')
nltk.download('stopwords')
nltk.download('wordnet')

stop_words = set(stopwords.words('portuguese')) if 'portuguese' in nltk.corpus.stopwords.fileids() else set(stopwords.words('english'))
lemmatizer = WordNetLemmatizer()


def normalize_text(text):
    """Lowercase, remove punctuation/extra spaces, tokenize, lemmatize (se poss√≠vel)."""
    text = text.lower()
    text = re.sub(r'[%s]' % re.escape(string.punctuation), ' ', text)
    tokens = nltk.word_tokenize(text)
    tokens = [t for t in tokens if t.isalpha()]
    tokens = [t for t in tokens if t not in stop_words]
    # nota: WordNetLemmatizer funciona melhor em ingl√™s; para portugu√™s usar lemmatizers dedicados
    tokens = [lemmatizer.lemmatize(t) for t in tokens]
    return ' '.join(tokens)

df['text_norm'] = df['text'].apply(normalize_text)

tfidf_vect = TfidfVectorizer()
X_tfidf = tfidf_vect.fit_transform(df['text_norm'])

def retrieve_response(query, vect=tfidf_vect, utter_vecs=X_tfidf, df=df, topk=1, threshold=0.6):
    """Retorna a resposta de maior similaridade; se menor que threshold, responde fallback."""
    q = normalize_text(query)
    qv = vect.transform([q])
    sims = cosine_similarity(qv, utter_vecs).flatten()
    idx_sorted = np.argsort(-sims)
    if sims[idx_sorted[0]] >= threshold:
        chosen_idx = idx_sorted[0]
        intent = df.iloc[chosen_idx]['intent']
        resp = np.random.choice(intents[intent]['responses'])
        return resp, intent, sims[idx_sorted[0]]
    else:
        return intents['fallback']['responses'][0], 'fallback', sims[idx_sorted[0]]

# Interface da Doceria
st.markdown('<div class="chat-container">', unsafe_allow_html=True)

col1, col2, col3 = st.columns([1,3,1])
with col2:
    st.markdown("### üç∞ Converse conosco! üßÅ")
    st.markdown("*Pergunte sobre nossos doces, hor√°rios, pre√ßos ou fa√ßa seu pedido!*")

# √Årea de chat
user = st.text_input('üí¨ Digite sua mensagem:', placeholder="Ex: Que doces voc√™s t√™m? Qual o hor√°rio? Quero fazer um pedido...")

if user:
    # Processamento da mensagem
    response, intent, confidence = retrieve_response(user)
    
    # Exibi√ß√£o das mensagens em formato de chat
    st.markdown("---")
    
    # Mensagem do usu√°rio
    st.markdown(f"""
    <div style="background-color: #ffefd5; padding: 10px; border-radius: 10px; margin: 5px 0; border-left: 4px solid #ff69b4;">
        <strong>üßë‚Äçüíº Voc√™:</strong> {user}
    </div>
    """, unsafe_allow_html=True)
    
    # Resposta do bot
    st.markdown(f"""
    <div style="background-color: #fff0f5; padding: 10px; border-radius: 10px; margin: 5px 0; border-left: 4px solid #8b4513;">
        <strong>ü§ñ Doce Encanto:</strong> {response}
    </div>
    """, unsafe_allow_html=True)
    
    # Informa√ß√µes t√©cnicas (expans√≠vel)
    with st.expander("üìä Informa√ß√µes t√©cnicas"):
        st.write(f'**Texto processado:** {normalize_text(user)}')
        st.write(f'**Inten√ß√£o identificada:** {intent}')
        st.write(f'**Confian√ßa:** {confidence:.2f}')

# Informa√ß√µes da loja na sidebar
st.sidebar.markdown("## üè™ Doce Encanto")
st.sidebar.markdown("### üìû Contato")
st.sidebar.markdown("üì± WhatsApp: (11) 99999-9999")
st.sidebar.markdown("üìß Email: contato@doceencanto.com")

st.sidebar.markdown("### üïí Hor√°rios")
st.sidebar.markdown("üóìÔ∏è Segunda a S√°bado: 8h √†s 19h")
st.sidebar.markdown("üóìÔ∏è Domingo: 9h √†s 17h")

st.sidebar.markdown("### üìç Endere√ßo")
st.sidebar.markdown("üè† Rua das Flores, 123 - Centro")

st.sidebar.markdown("### üéÇ Especialidades")
st.sidebar.markdown("üßÅ Bolos personalizados")
st.sidebar.markdown("üç≠ Docinhos para festa")
st.sidebar.markdown("üç∞ Tortas artesanais")
st.sidebar.markdown("üç™ Cookies gourmet")

st.markdown('</div>', unsafe_allow_html=True)
